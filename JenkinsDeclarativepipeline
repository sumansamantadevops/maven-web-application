pipeline {

agent any

tools {
maven "maven3.8.6"
}

triggers {
  pollSCM '* * * * *'
}

options {
  //Discard old build
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  

}

 stages {
  
  //Checkout Code Stage
  stage('CheckoutCode') {
   steps {
   git branch: 'development', credentialsId: '4c698820-4fe1-4cbf-a12c-a9c8d797cc4e', url: 'https://github.com/suman-devops-github/maven-web-application.git'
   }
  }
  
  //Build Stage
  stage('Build') {
   steps {
   sh "mvn clean package"
   }
  }
  
  //Execute SonarQube Report
  stage('ExecuteSonarQubeReport') {
   steps {
   sh "mvn sonar:sonar"
   }
  }
  
  //Upload Artifacts Into Artifactory Repository
  stage('UploadArtifactsIntoNexus') {
   steps {
   sh "mvn deploy"
   }
  }
 
 //Deploy App Into Tomcat Server
 stage('DeployAppIntoTomcatServer') {
  steps {
  sshagent(['f845696b-f9c2-49d9-8648-4fc8252dd8f4']) {
  sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.12.233:/opt/apache-tomcat-9.0.64/webapps"
  }
 }
 }
 
 
} //Stages closing

post {
  success {
  sendSlackNotifications('SUCCESS')
  }
  failure {
   sendSlackNotifications('FAILURE')
  }
}


} //Pipeline closing


def sendSlackNotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart')
}
